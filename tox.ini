[tox]
envlist = dev,bmap,sdcard,clean
skip_missing_interpreters = true
isolated_build = true
skipsdist = true
# uncomment the following line if your tox version is still 3.x
#min_version = 4.3.3

[base]
deps =
    pip>=22.1

[testenv]
skip_install = true
install_command = pip install {opts} {packages}
always_copy = True

[testenv:{sync,do}]
always_copy = False
envdir = {toxinidir}/.sync
# these 2 tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    do: Run a cmd following "--" from the sync .env, e.g. "tox -e do -- repolite --show"
    sync: Install repolite and use it for cloning workflow deps

passenv =
    REPO_CFG
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    XDG_*
    PIP_DOWNLOAD_CACHE
    PYTHONIOENCODING

deps =
    # logging_tree
    {[base]deps}
    build
    repolite @ https://github.com/sarnold/repolite/releases/download/0.6.2/repolite-0.6.2-py3-none-any.whl

commands =
    sync: repolite {posargs:--quiet}
    do: {posargs:python -c 'print("No cmd provided")'}

[testenv:{dev,bmap,sdcard}]
envdir = {toxinidir}/.venv
# these tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch as toxfile.py
runner = ignore_env_name_mismatch

allowlist_externals =
    bash

description =
    dev: Create a kas build virtual environment with managed deps
    sdcard: Build the (wic) sdcard boot target
    bmap: Burn the wic image to sdcard device (default: {env:DISK})

setenv =
    IPP = {env:IPP:}
    CORE = {env:CORE:oe}
    DEBUG = {env:DEBUG:}
    DEPLOY_DIR = {env:DEPLOY_DIR:build/tmp-glibc/deploy/images/{env:MACHINE}}
    DISK = {env:DISK:/dev/mmcblk0}
    IMAGE = {env:IMAGE:rpi-test-image}
    MACHINE = {env:MACHINE:raspberrypi3-64}
    PKGTYPE = {env:PKGTYPE:ipk}

passenv =
    DISPLAY
    XAUTHORITY
    GID
    UID
    HOME
    USERNAME
    USER
    CI
    LANG
    LC_COLLATE
    SSH_*
    XDG_*
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    # logging_tree
    {[base]deps}
    kas
    bmaptool @ git+https://github.com/sarnold/bmap-tools.git@pep517
    pyserv @ git+https://github.com/sarnold/pyserv.git@master

commands =
    dev: kas checkout layers/meta-small-arm-extra/kas/{env:CORE}/{posargs:"sysvinit"}.yaml
    sdcard: bash -c 'rm -rf build/tmp*'
    sdcard: kas shell layers/meta-small-arm-extra/kas/{env:CORE}/{posargs:"sysvinit"}.yaml -c 'PACKAGE_FEED_IP_PORT={env:IPP} PACKAGE_FEED_TYPE={env:PKGTYPE} bitbake {env:IMAGE}'
    bmap: bmaptool copy {env:DEPLOY_DIR}{/}{env:IMAGE}-{env:MACHINE}.wic {env:DISK}

commands_post =
    dev: bash -c 'sudo setcap cap_net_bind_service+ep {envdir}/bin/python'
    dev: bash -c 'sudo setcap cap_net_bind_service+ep {envdir}/bin/python3'

[testenv:changes]
skip_install = true
always_copy = False

allowlist_externals =
    bash

deps =
    {[base]deps}
    gitchangelog @ https://github.com/sarnold/gitchangelog/releases/download/3.2.0/gitchangelog-3.2.0-py3-none-any.whl

commands =
    bash -c 'gitchangelog {posargs} > CHANGELOG.rst'

[testenv:clean]
skip_install = true
always_copy = False

allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    bash -c 'rm -rf  __pycache__ build/tmp*'
